/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package frontend;

import backend.TrainerRole;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.Calendar;
import javax.swing.JOptionPane;

/**
 *
 * @author Zaki
 */
public class RegisterMemberForClassPage extends javax.swing.JFrame {

    TrainerRole trainer;
    TrainerOptions trainerOptions;
    
    
    public RegisterMemberForClassPage () {
        initComponents();
    }
    
    public RegisterMemberForClassPage(TrainerRole trainer, TrainerOptions trainerOptions) {
        initComponents();
        this.trainer = trainer;
        this.trainerOptions = trainerOptions;
        registrationDateField.setDate(new java.util.Date());
        this.trainerOptions.setVisible(false);
        this.setVisible(true);
        this.setTitle("Register Member For Class");
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        memberIDLabel = new javax.swing.JLabel();
        classIDLabel = new javax.swing.JLabel();
        registrationDateLabel = new javax.swing.JLabel();
        memberIDField = new javax.swing.JTextField();
        classIDField = new javax.swing.JTextField();
        registrationDateField = new com.toedter.calendar.JDateChooser();
        registerButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        quitButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        memberIDLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        memberIDLabel.setText("Member ID: ");

        classIDLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        classIDLabel.setText("Class ID: ");

        registrationDateLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        registrationDateLabel.setText("Registration Date: ");

        registrationDateField.setDateFormatString("yyyy-MM-dd");

        registerButton.setText("Register");
        registerButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                registerButtonMouseClicked(evt);
            }
        });

        backButton.setText("Back");
        backButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backButtonMouseClicked(evt);
            }
        });

        quitButton.setText("Quit");
        quitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(backButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(quitButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(memberIDLabel)
                            .addComponent(classIDLabel)
                            .addComponent(registrationDateLabel))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(memberIDField)
                            .addComponent(classIDField, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(registrationDateField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 12, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(161, 161, 161)
                .addComponent(registerButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(memberIDLabel)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(memberIDField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(classIDLabel)
                    .addComponent(classIDField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(registrationDateLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(registrationDateField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(registerButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backButton)
                    .addComponent(quitButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backButtonMouseClicked
        trainerOptions.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_backButtonMouseClicked

    private void quitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitButtonActionPerformed
        System.exit(1);
    }//GEN-LAST:event_quitButtonActionPerformed

    private void registerButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_registerButtonMouseClicked
        if (classIDField.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Class ID can't be empty!!", "Error: Data Missing", JOptionPane.ERROR_MESSAGE);
        }
        else if (memberIDField.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Member ID can't be empty!!", "Error: Data Missing", JOptionPane.ERROR_MESSAGE);
        } else if ((trainer.getListOfClasses().stream().anyMatch(class_ -> class_.getSearchKey().equals(classIDField.getText()) && (class_.getAvailableSeats() == 0)))) {
            JOptionPane.showMessageDialog(null, "Class with ID: " + classIDField.getText() + " is full", "Error: No Available Seats", JOptionPane.ERROR_MESSAGE);
        } else if (trainer.getListOfRegistrations().stream().anyMatch(record -> record.getSearchKey().equals(memberIDField.getText() + classIDField.getText()))) {
            JOptionPane.showMessageDialog(null, "Registration with ID: " + memberIDField.getText()+classIDField.getText() + " already exists", "Error: Duplicated Data", JOptionPane.ERROR_MESSAGE);
        }
        else if (trainer.getListOfMembers().stream().noneMatch(member -> member.getSearchKey().equals(memberIDField.getText()))) {
            JOptionPane.showMessageDialog(null, "Member with ID: " + memberIDField.getText() + " doesn't exist", "Error: Data Missing", JOptionPane.ERROR_MESSAGE);
        }
        else if (trainer.getListOfClasses().stream().noneMatch(class_ -> class_.getSearchKey().equals(classIDField.getText()))) {
            JOptionPane.showMessageDialog(null, "Class with ID: " + classIDField.getText() + " doesn't exist", "Error: Data Missing", JOptionPane.ERROR_MESSAGE);

        } else {
            Calendar calendar = Calendar.getInstance();
            calendar.setTime(registrationDateField.getDate());
            trainer.registerMemberForClass(memberIDField.getText(), classIDField.getText(), LocalDate.of(calendar.get(Calendar.YEAR), calendar.get(Calendar.MONTH) + 1, calendar.get(Calendar.DAY_OF_MONTH)));
            JOptionPane.showMessageDialog(null, "Member with ID: " + memberIDField.getText() + " has registered to class: " + classIDField.getText(), "Successful Registration", JOptionPane.PLAIN_MESSAGE);
            trainerOptions.setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_registerButtonMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegisterMemberForClassPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegisterMemberForClassPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegisterMemberForClassPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegisterMemberForClassPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegisterMemberForClassPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JTextField classIDField;
    private javax.swing.JLabel classIDLabel;
    private javax.swing.JTextField memberIDField;
    private javax.swing.JLabel memberIDLabel;
    private javax.swing.JButton quitButton;
    private javax.swing.JButton registerButton;
    private com.toedter.calendar.JDateChooser registrationDateField;
    private javax.swing.JLabel registrationDateLabel;
    // End of variables declaration//GEN-END:variables
}
